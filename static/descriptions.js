var site_color = "#ffffff"
var kraken_text = "<h1>Kraken</h1> <p>Data from cryptocurrency exchange Kraken’s website was used to assessed project speed. Kraken provides a list of over 200 cryptocurrencies and corresponding estimates for how long it takes before they confirm a transaction.<a href=\"https://support.kraken.com/hc/en-us/articles/203325283-Cryptocurrency-deposit-processing-times#\" target=\"_blank\">[Link]</a></p> <p>For individuals using a centralized exchange, this is a practical measure of how long their transactions will take.  However, these figures are based on Kraken’s own procedures for crediting funds - not the actual time to finality on the blockchain.</p>"
var cer_text = "<h1>CER</h1> <p>The cybercurity company CER lists security grades for cryptocurrency projects and exchanges on their website. These grades range from “D” to “AAA”, and are calculated based on a number of factors including previous security incidents, insurance capacity, and whether or not a token is audited. <a href=\"https://cer.live/cryptocurrency-security-rating\" target=\"_blank\">[Link]</a></p>"
var cw_text = "<h1>Cryptowisser</h1> <p>Data from Cryptowisser was used to assess the energy-efficiency of different crypto projects. Cryptowisser is a website that provides resources for crypto investors. Working together with sustainability experts, they graded cryptocurrencies on their carbon footprints. <a href=\"https://www.cryptowisser.com/crypto-carbon-footprint/\" target=\"_blank\">[Link]</a>"
var cc_text = "<h1>CryptoCompare</h1> <p>CryptoCompare is a website that provides in-depth information on thousands of cryptocurrency projects, including text descriptions summarizing each one. These text descriptions were the primary basis for categorical tags that were applied to each cryptocurrency. <a href=\"https://www.cryptocompare.com/coins/list/all/USD/1\" target=\"_blank\">[Link]</a></p>"
var cmc_text = "<h1>CoinMarketCap</h1> <p>Data from CoinMarketCap was used as another source of project information. This website is excellent for tracking the price and market cap of each cryptocurrency. In addition, their API provides information on each project's platform, consensus mechanism, and category info. <a href=\"https://coinmarketcap.com/\" target=\"_blank\">[Link]</a></p>"

var speed_desc = "<h1>Speed ratings</h1><p> The slowest and fastest transaction times were assigned the lowest and highest speed ratings (0 and 1, respectively), and intermediate values were interpolated on a logarithmic scale. This approach was taken to handle the different timescales of transactions speeds... while most occur in seconds or minutes, a few can take days for confirmation! </p><img src=\"static/speed_scaling.png\"><p>While assigning ratings with linear interpolation (for example, with scikit-learn’s <code> MinMaxScaler()</code>) performs poorly in these circumstances, assigning ratings on a logarithmic scale better discriminates between the different timescales at which cryptocurrency transactions are confirmed. </p>"
var security_desc = "<h1>Security ratings</h1><p> The letter grades given by CER are based on a points system – where points are awarded based on various security criteria. The point total for each project was taken and then normalized by the maximum possible score (10) to give the security ratings used in the feature matrix. </p>"
var energy_desc =  "<h1>Energy-efficiency ratings</h1><p> The grades given by Cryptowisser are ordinal with five possible values (from best to worst: True Green, Medium Green, Light Green, Beige, and Brown). Since there was no underlying points system, these were uniformly mapped as:</p><br><font color=\"#0a6e29\">True Green= 1</font><br> <font color=\"#60966f\">Medium Green = 0.75</font><br><font color=\"#7abf8d\">Light Green = 0.5</font><br><font color=\"f1f2a0\">Beige = 0.25</font><br><font color=\"#7a6b47\">Brown = 0</font>"
var tag_desc = "<h1>Categorical tags</h1><p> <p>Natural language processing (NLP) techniques were applied to the text descriptions of each cryptocurrency to assign categorical tags to that project. The presence of keywords and phrases related to each category was used to determine whether or not a tag should be applied to each project. These keywords were lemmatized and set as the vocabulary of a <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html\"><code> CountVectorizer() </code></a>. Feeding the lemmatized text descriptions then generates a binary output for each cryptocurrency-tag combination indicating the presence of each tag.</p><p>For example, the presence of the lemma \"vote\" indicated a governance token (or token that grant holders voting rights on a project). Based on this excerpt from the description of Internet Computer (ICP) tokens, it was determined to be a governance token. </p><p><i> \"Secondly, ICP can be staked in the permissionless Network Nervous System DAO that governs the Internet Computer blockchain, creating <mark>voting</mark> neurons that generate <mark>voting</mark> rewards.\"</p>"
var project_desc = "<h1>Blockchain & <br>categorical tags</h1><p> Project information from the CoinMarketCap page for each cryptocurrency was used in a couple ways.</p><p>First, each page provides information about the token's consensus mechanism and platform; this information about the network was used as the basis for applying tags in the “advanced” section on the homepage.</p><p>Second, each project has some categorical tags applied to it that are retrievable through the API; when these tags coincided with one of the categories in our dataset, the tag was applied – even if the project’s text description didn’t have any of the keywords. </p>"

var matrix_desc = "<h1>Feature Matrix</h1><p>All tags were one-hot encoded using <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MultiLabelBinarizer.html\" target=\"_blank\"><code>MultiLabelBinarizer()</code></a> before combining with speed, security, and energy-efficiency ratings. The resulting feature matrix has shape 1954x54 (54 features for 1954 samples/coins). This is currently the \"final\" matrix used for the recommendation engine, although the # of features and coins will likely increase in the future as I work to update and improve this project.</p> <p><font style=\"text-decoration-line: underline\">Dimensionality reduction:</font><br>The feature matrix can be thought of as a 54-dimensional space, and each coin is located at some point in this space. While this cannot be visualized directly, principal component analysis (PCA) can be used to look at the dimensions of this space with the highest variance:</p><img src=\"static/pca.png\" width=\"450\"><p>The top plot shows a 3D scatterplot of coins in PCA-space, with heat indicating increased density of overlapping points. and the bottom plots show each of these components plotted against one another.</p><p>There are a couple of hotspots with densely clustered projects, and projects don’t seem to be very well-separated in PCA-space. Indeed, the first three components explain a pretty low amount of the overall variance (PC1: 19.1%, PC2: 12.5%, and PC3: 8.7%). Low explained variance suggests that features do not have strong linear correlations with one another – in other words, the presence of each tag is independent, and doesn’t tell you much about the other tags a project is likely to have.</p>"

var nn_desc = "<h1>Nearest Neighbors</h1><p>A <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.NearestNeighbors.html#sklearn.neighbors.NearestNeighbors\" target=\"_blank\"><code>NearestNeighbors()</code></a> approach was taken to search for the closest projects in the feature space to the point defined by user inputs. The percent match was calculated as:</p> <i>% match = 100 * (1 – distance / # features)</i> <br><p> with distance measured by the City block (Manhattan) distance metric. This distance is normalized by the # of features, as this represents the maximum possible distance in a matrix where every feature is on a [0, 1] scale.</p>"
var out_desc = "<h1>Recommendations</h1><p> The output of the Nearest Neighbors algorithm is an array of cryptocurrencies ordered by increasing distance. This is the basis for the projects recommended to the user.</p><p> When there are few inputs/checked-boxes,  it is common to have many cryptocurrencies with the same distance. Equidistant projects are reordered by decreasing market cap before returning results to the user. In other words, if two projects are equally relevant to what you’re looking for, the bigger project be listed first."

function changecontent(desc, color){
    document.getElementById("test").innerHTML=desc;
    document.getElementById("test").style.borderColor = color;
    document.getElementById("test").style.color = color;
}
